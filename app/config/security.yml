#jms_security_extra:
#    secure_all_services: false
#    expressions: true
#    util:
#        secure_random: ~

security:
    encoders:
#        in_memory: plaintext
        Symfony\Component\Security\Core\User\User: plaintext
        DTA\MetadataBundle\Model\Master\DtaUser: 
            algorithm: sha512
            iterations: 5000
            encode_as_base64: true

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        
                    
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        import:
            pattern: ^/(Convert|Update|RebuildModel)
            security: false
        login:
            pattern: ^/Login
            security: false

#        only sensible after database deletion (because the login system will stay active)
        generateTestData:
            pattern: ^/daten/generateTestData
            security: false

        secured_area:
            security: true
            # default configuration for anonymous users
            anonymous: ~
            # secure all URLs 
            pattern:    ^/
            form_login:
                # The target of the route "login" is used to display the login form.
                # @see MasterDomainController->loginFormAction() 
                login_path: login       
                # The symfony firewall automatically catches the credentials provided, so no custom implementation of this route is needed.
                check_path: login_check
            logout: ~
#                path:   /demo/secured/logout
#                target: /demo/
#            http_basic:
#                realm: "Secured Demo Area"
                

    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        main:
            propel:
                class: DTA\MetadataBundle\Model\Master\DtaUser
                property: username
                    
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/Admin, roles: ROLE_ADMIN }
        - { path: ^/Master, roles: ROLE_ADMIN }
        - { path: ^/Workflow, roles: ROLE_ADMIN }
        - { path: ^/Classification, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
