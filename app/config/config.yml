
# The tilde ~ refers to the default setting for a certain parameter.

imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
# Precautionary include in case anyone should wish to register the DTA form types as services.
# This would make them available in the form builders under aliases e.g. 'dynamicCollection', 'selectOrAdd', ...
    - { resource: '@DTAMetadataBundle/Resources/config/services.yml' }
    
framework:
    #esi:             ~
    # translate to german by default
    translator:      { fallback: de }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enabled: true, enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  de
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:         ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    # register custom form rendering resources
    form:
         resources:
            # some additional options for the form rendering using divs
             - 'DTAMetadataBundle:Form:form_div_layout_dta.html.twig'
            # how to render newly defined form input types such as the sortable collection
             - 'DTAMetadataBundle:Form:dtaFormExtensions.html.twig'
            # how to render specific model classes (monograph, author, etc.)
             - 'DTAMetadataBundle:Form:formTypes.html.twig'
    # absolute path on the server to the web directory, needed sometimes for file_exists
    globals:
        dtaMetadataBundlePath: %kernel.root_dir%/../src/DTA/MetadataBundle/


# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

propel:
#     for more information on propel configuration refer to 
#     http://propelorm.org/reference/buildtime-configuration.html#general_build_settings
    build_properties:
      
      # database abstraction
      propel.database: pgsql
      propel.sql.dir: ${propel.output.dir}/pgsql
      
      propel.builder.pluralizer.class: builder.util.StandardEnglishPluralizer
      # custom behaviors
      propel.behavior.reconstructed_flaggable.class: src.DTA.MetadataBundle.Model.reconstructed_flaggable.ReconstructedFlaggableBehavior
      propel.behavior.table_row_view.class: src.DTA.MetadataBundle.Model.table_row_view.TableRowViewBehavior

      # TODO: for testing, non-enforcement of the foreign key constraints is more practical (set to MyISAM)
      propel.mysql.tableType: InnoDB
      
      # multiple schemas with the same database name
      propel.packageObjectModel: true
      # leads to problems with code location and autoloading
      #propel.namespace.autoPackage: true

    # propel database connections
    dbal:
        default_connection: DTAMetadata
        connections:
#            DTAMetadata:
              # the database parameters are stored in parameters.yml
#              driver:     "mysql"
#              user:       "root"
#              password:   "root"
#              dsn:        "mysql:host=%database_host%;dbname=%database_name%;charset=%database_charset%"
#              options:    {}
#              attributes: {}
            DTAMetadata:
              # the database parameters are stored in parameters.yml
              driver:     "pgsql"
              user:       "postgres"
              password:   "root"
              dsn:        "pgsql:host=%database_host%;dbname=%database_name%;"
              options:    {}
              attributes: {}
# this was only used to generate a schema from an existing database (which was in turn generated with the mysql workbench graphical tools)
#            ReverseSource:
#              driver:     "%database_driver%"
#              user:       "%database_user%"
#              password:   "%database_password%"
#              dsn:        "%database_driver%:host=%database_host%;dbname=metadatenbank;charset=%database_charset%"
           

        
# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }



# Doctrine Configuration
#doctrine:
#    dbal:
#        driver:   %database_driver%
#        host:     %database_host%
#        port:     %database_port%
#        dbname:   %database_name%
#        user:     %database_user%
#        password: %database_password%
#        charset:  UTF8
#
#    orm:
#        auto_generate_proxy_classes: %kernel.debug%
#        auto_mapping: true
#
#monolog:
#    handlers:
#        applog:
#            type: stream
#            path: /var/log/symfony.log
#            level: error
#        main:
#            type: fingers_crossed
#            action_level: warning
#            handler: file
#        file:
#            type: stream
#            level: debug
#        syslog:
#            type: syslog
#            level: error