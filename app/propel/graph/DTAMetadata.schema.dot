digraph G {
nodecorpus [label="{<table>corpus|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\lwrit_id (INTEGER) [FK]\l}", shape=record];
nodedwdsGenre [label="{<table>dwdsGenre|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\lchildOf (INTEGER) [FK]\l}", shape=record];
nodegenre [label="{<table>genre|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\lchildOf (INTEGER) [FK]\l}", shape=record];
nodepartner [label="{<table>partner|<cols>id (INTEGER) [PK]\lname (VARCHAR)\ladress (VARCHAR)\lperson (VARCHAR)\lmail (VARCHAR)\lweb (VARCHAR)\lcomments (LONGVARCHAR)\lphone1 (VARCHAR)\lphone2 (VARCHAR)\lphone3 (VARCHAR)\lfax (VARCHAR)\llog_last_change (TIMESTAMP)\llog_last_user (INTEGER)\l}", shape=record];
noderelatedSet [label="{<table>relatedSet|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\l}", shape=record];
nodesource [label="{<table>source|<cols>id (INTEGER) [PK]\lwrit_id (INTEGER) [FK]\lquality (LONGVARCHAR)\lname (LONGVARCHAR)\lcomments (LONGVARCHAR)\lavailable (BOOLEAN)\lsignatur (VARCHAR)\llibrary (LONGVARCHAR)\llibraryGnd (VARCHAR)\l}", shape=record];
nodestatus [label="{<table>status|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\l}", shape=record];
nodetask [label="{<table>task|<cols>id (INTEGER) [PK]\ltaskType_id (INTEGER) [FK]\ldone (BOOLEAN)\lstart (TIMESTAMP)\lend (TIMESTAMP)\lcomments (LONGVARCHAR)\lwritGroup_id (INTEGER) [FK]\lwrit_id (INTEGER) [FK]\lresponsibleUser_id (INTEGER) [FK]\l}", shape=record];
nodetaskType [label="{<table>taskType|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\ltree_left (INTEGER)\ltree_right (INTEGER)\ltree_level (INTEGER)\l}", shape=record];
nodeuser [label="{<table>user|<cols>id (INTEGER) [PK]\luserName (VARCHAR)\lpasswordHash (LONGVARCHAR)\lname_id (INTEGER)\lmail (LONGVARCHAR)\lphone (LONGVARCHAR)\l}", shape=record];
nodewritGroup [label="{<table>writGroup|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\l}", shape=record];
nodedateSpecification [label="{<table>dateSpecification|<cols>id (INTEGER) [PK]\lyear (INTEGER)\lcomments (LONGVARCHAR)\lcomments_is_reconstructed (BOOLEAN)\l}", shape=record];
nodepersonalName [label="{<table>personalName|<cols>id (INTEGER) [PK]\lperson_id (INTEGER) [FK]\l}", shape=record];
nodenameFragment [label="{<table>nameFragment|<cols>id (INTEGER) [PK]\lpersonalName_id (INTEGER) [FK]\lname (LONGVARCHAR)\lnameFragmentTypeId (INTEGER) [FK]\lsortable_rank (INTEGER)\l}", shape=record];
nodenameFragmentType [label="{<table>nameFragmentType|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\l}", shape=record];
nodeplace [label="{<table>place|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\lgnd (VARCHAR)\l}", shape=record];
nodetitle [label="{<table>title|<cols>id (INTEGER) [PK]\l}", shape=record];
nodetitleFragment [label="{<table>titleFragment|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\ltitle_id (INTEGER) [FK]\ltitleFragmentType_id (INTEGER) [FK]\lsortable_rank (INTEGER)\l}", shape=record];
nodetitleFragmentType [label="{<table>titleFragmentType|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\l}", shape=record];
nodeessay [label="{<table>essay|<cols>id (INTEGER) [PK]\lpublication_id (INTEGER) [FK] [PK]\l}", shape=record];
nodemagazine [label="{<table>magazine|<cols>id (INTEGER) [PK]\lpublication_id (INTEGER) [FK] [PK]\l}", shape=record];
nodemonograph [label="{<table>monograph|<cols>id (INTEGER) [PK]\lpublication_id (INTEGER) [FK] [PK]\l}", shape=record];
nodepublication [label="{<table>publication|<cols>id (INTEGER) [PK]\ltitle_id (INTEGER) [FK]\lpublishingCompany_id (INTEGER) [FK]\lplace_id (INTEGER) [FK]\ldateSpecification_id (INTEGER) [FK]\lprintRun (LONGVARCHAR)\lprintRunComment (LONGVARCHAR)\ledition (LONGVARCHAR)\lnumPages (INTEGER)\lnumPagesNormed (INTEGER)\lbibliographicCitation (LONGVARCHAR)\l}", shape=record];
nodepublishingCompany [label="{<table>publishingCompany|<cols>id (INTEGER) [PK]\lname (LONGVARCHAR)\lgnd (LONGVARCHAR)\l}", shape=record];
nodeseries [label="{<table>series|<cols>id (INTEGER) [PK]\lpublication_id (INTEGER) [FK] [PK]\lvolume (LONGVARCHAR)\l}", shape=record];
nodevolume [label="{<table>volume|<cols>id (INTEGER) [PK]\lvolumeIndex (LONGVARCHAR)\lvolumeIndexNumerical (INTEGER)\ltotalVolumes (INTEGER)\lmonograph_id (INTEGER) [FK]\lmonograph_publication_id (INTEGER) [FK]\l}", shape=record];
nodework [label="{<table>work|<cols>id (INTEGER) [PK]\lstatus_id (INTEGER) [FK]\ldateSpecification_id (INTEGER) [FK]\lgenre_id (INTEGER) [FK]\lsubgenre_id (INTEGER) [FK]\ldwdsGenre_id (INTEGER) [FK]\ldwdsSubgenre_id (INTEGER) [FK]\ldoi (LONGVARCHAR)\lcomments (LONGVARCHAR)\lformat (LONGVARCHAR)\ldirectoryName (LONGVARCHAR)\l}", shape=record];
nodewrit [label="{<table>writ|<cols>id (INTEGER) [PK]\lwork_id (INTEGER) [FK]\lpublication_id (INTEGER) [FK]\lpublisher_id (INTEGER) [FK]\lprinter_id (INTEGER) [FK]\ltranslator_id (INTEGER) [FK]\lnumPages (INTEGER)\lrelatedSet_id (INTEGER) [FK]\l}", shape=record];
nodewrit_writGroup [label="{<table>writ_writGroup|<cols>writGroup_id (INTEGER) [FK] [PK]\lwrit_id (INTEGER) [FK] [PK]\l}", shape=record];
nodeauthor [label="{<table>author|<cols>id (INTEGER) [PK]\lperson_id (INTEGER) [FK] [PK]\l}", shape=record];
nodeauthor_work [label="{<table>author_work|<cols>work_id (INTEGER) [FK] [PK]\lauthor_id (INTEGER) [FK] [PK]\lauthor_person_id (INTEGER) [FK] [PK]\lname_id (INTEGER)\l}", shape=record];
nodeperson [label="{<table>person|<cols>id (INTEGER) [PK]\lgnd (VARCHAR)\l}", shape=record];
nodeprinter [label="{<table>printer|<cols>id (INTEGER) [PK]\lperson_id (INTEGER) [FK] [PK]\l}", shape=record];
nodepublisher [label="{<table>publisher|<cols>id (INTEGER) [PK]\lperson_id (INTEGER) [FK] [PK]\l}", shape=record];
nodetranslator [label="{<table>translator|<cols>id (INTEGER) [PK]\lperson_id (INTEGER) [FK] [PK]\l}", shape=record];
nodecorpus:cols -> nodewrit:table [label="writ_id=id"];
nodedwdsGenre:cols -> nodedwdsGenre:table [label="childOf=id"];
nodegenre:cols -> nodegenre:table [label="childOf=id"];
nodesource:cols -> nodewrit:table [label="writ_id=id"];
nodetask:cols -> nodetaskType:table [label="taskType_id=id"];
nodetask:cols -> nodewritGroup:table [label="writGroup_id=id"];
nodetask:cols -> nodewrit:table [label="writ_id=id"];
nodetask:cols -> nodeuser:table [label="responsibleUser_id=id"];
nodepersonalName:cols -> nodeperson:table [label="person_id=id"];
nodenameFragment:cols -> nodepersonalName:table [label="personalName_id=id"];
nodenameFragment:cols -> nodenameFragmentType:table [label="nameFragmentTypeId=id"];
nodetitleFragment:cols -> nodetitle:table [label="title_id=id"];
nodetitleFragment:cols -> nodetitleFragmentType:table [label="titleFragmentType_id=id"];
nodeessay:cols -> nodepublication:table [label="publication_id=id"];
nodemagazine:cols -> nodepublication:table [label="publication_id=id"];
nodemonograph:cols -> nodepublication:table [label="publication_id=id"];
nodepublication:cols -> nodetitle:table [label="title_id=id"];
nodepublication:cols -> nodepublishingCompany:table [label="publishingCompany_id=id"];
nodepublication:cols -> nodeplace:table [label="place_id=id"];
nodepublication:cols -> nodedateSpecification:table [label="dateSpecification_id=id"];
nodeseries:cols -> nodepublication:table [label="publication_id=id"];
nodevolume:cols -> nodemonograph:table [label="monograph_id=id,publication_id"];
nodevolume:cols -> nodemonograph:table [label="monograph_publication_id=id,publication_id"];
nodework:cols -> nodestatus:table [label="status_id=id"];
nodework:cols -> nodedateSpecification:table [label="dateSpecification_id=id"];
nodework:cols -> nodegenre:table [label="genre_id=id"];
nodework:cols -> nodegenre:table [label="subgenre_id=id"];
nodework:cols -> nodedwdsGenre:table [label="dwdsGenre_id=id"];
nodework:cols -> nodedwdsGenre:table [label="dwdsSubgenre_id=id"];
nodewrit:cols -> nodework:table [label="work_id=id"];
nodewrit:cols -> nodepublication:table [label="publication_id=id"];
nodewrit:cols -> nodepublisher:table [label="publisher_id=id"];
nodewrit:cols -> nodeprinter:table [label="printer_id=id"];
nodewrit:cols -> nodetranslator:table [label="translator_id=id"];
nodewrit:cols -> noderelatedSet:table [label="relatedSet_id=id"];
nodewrit_writGroup:cols -> nodewritGroup:table [label="writGroup_id=id"];
nodewrit_writGroup:cols -> nodewrit:table [label="writ_id=id"];
nodeauthor:cols -> nodeperson:table [label="person_id=id"];
nodeauthor_work:cols -> nodework:table [label="work_id=id"];
nodeauthor_work:cols -> nodeauthor:table [label="author_id=id,person_id"];
nodeauthor_work:cols -> nodeauthor:table [label="author_person_id=id,person_id"];
nodeprinter:cols -> nodeperson:table [label="person_id=id"];
nodepublisher:cols -> nodeperson:table [label="person_id=id"];
nodetranslator:cols -> nodeperson:table [label="person_id=id"];
}
