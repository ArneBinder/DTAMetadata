<?xml version="1.0" encoding="utf-8"?>

<!-- 
    Contains all entities related to historical facts.
-->

<!--The name attribute refers to the connection to use. See app/config/config.yml under
    propel > dbal > connections for connection setup. -->
<database name="dtametadata" namespace="DTA\MetadataBundle\Model\Data" defaultIdMethod="native">
  
    <!--Add the columns created_at and updated_at to all entities. These columns are automatically updated when making changes to the database.-->
    <behavior name="timestampable"/>
    
    <!-- This parameter set is added to each entity that doesn't implement the table_row_view behavior. 
    It is not added to tables/entities that define the bahavior. -->
    <behavior name="table_row_view">
        <!--If no parameters are defined, all columns are added. (WITHOUT embedding any related entities) -->
    </behavior>
    
    <!-- Enthält die allen Publikationen gemeinsamen Daten.
    Bildet die Publikationstypen M, MM (teilweise, da volumes via $publication->addChild() hinzugefügt werden müssen), MS, DM und J ab. -->
    <table name="publication">
        
        <!-- TODO: enable autoincrement. During conversion, the ids are set as the ids of the legacy database.-->
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="false" required="true"/>
        
        <column name="type" description="Publikationstyp. Zur Auflösung des dynamischen Typs (z.B. ein Volume bettet ein Publication-Objekt ein, mit nichts als dem Publikationsobjekt in der Hand, lässt sich das zugehörige speziellere objekt aber nur durch ausprobieren aller Publikationstypen herausfinden.)" 
                type="ENUM" valueSet="BOOK,VOLUME,MULTIVOLUME,CHAPTER,JOURNAL,ARTICLE,SERIES" />
        <column name="legacytype" description="Altes Publikationstypen-Kürzel (J, JA, M, MM, MMS, etc.)" type="LONGVARCHAR" />
        
        <column name="title_id" type="INTEGER" required="true"/>
        
        <!--Personalia werden ueber Fremdschluessel von der Personenseite dargestellt.-->
        
        <column name="place_id" description="Druckort" type="INTEGER"/>
        <column name="publicationdate_id" description="Erscheinungsjahr" type="INTEGER"/>
        <column name="creationdate_id" description="Erscheinungsjahr der Erstausgabe" type="INTEGER"/>
        <column name="publishingcompany_id" description="Verlag" type="INTEGER"/>
        <column name="source_id" description="Zur Sicherheit aus der alten DB übernommen" type="INTEGER"/>
        
        <column name="legacygenre" description="Alt-Angabe zum Genre, zur Weiterverarbeitung bei Umstellung auf das neue Genre-System." type="LONGVARCHAR"/>
        <column name="legacysubgenre" description="Alt-Angabe zum Untergenre." type="LONGVARCHAR"/>
        <column name="legacy_dwds_category1" type="LONGVARCHAR"/>
        <column name="legacy_dwds_subcategory1" type="LONGVARCHAR"/>
        <column name="legacy_dwds_category2" type="LONGVARCHAR"/>
        <column name="legacy_dwds_subcategory2" type="LONGVARCHAR"/>
        
        <column name="dirname" description="Textuelle ID (Kombination aus Autor, Titel, Jahr)" type="LONGVARCHAR"/>
        <column name="usedcopylocation_id" description="Vermutlich der eingesetzte Nachweis. Entspricht dem alten metadaten.id_nachweis. " type="INTEGER"/>
        
        <!-- Bild- und Textquellen über die imageSource Tabelle dargestellt, da publication:imageSource eine 1:n Beziehung ist -->

        <column name="partner_id" description="akquiriert über" type="INTEGER"/>

        <!--Editorisches-->        
        <column name="editiondescription" description="Art der Ausgabe" type="LONGVARCHAR"/>
        <column name="digitaleditioneditor" description="Bearbeiter der digitalen Edition" type="LONGVARCHAR"/>
        
        <column name="citation" description="Bibliografische Angabe" type="LONGVARCHAR"/>
        
        <column name="printrun" description="Auflage" type="LONGVARCHAR"/>
        <column name="printrun_numeric" description="Auflage (numerisch)" type="INTEGER"/>
        
        <!--Klassifikation und Einordnung-->
        <!--vorherrschende Sprache, Kategorien, Schlagworte und Genres sind durch das Werk festgelegt.-->
    
        <column name="numpages" description="Anzahl Seiten (Umfang)" type="LONGVARCHAR"/>
        <column name="numpagesnumeric" description="Umfang (normiert)" type="INTEGER"/>
        <column name="firstpage" description="Startseite" type="INTEGER"/>
        
        <column name="comment" description="Anmerkungen" type="LONGVARCHAR"/>
        <column name="editioncomment" type="LONGVARCHAR"/>
        <column name="transcriptioncomment" description="Bemerkungen zu den Transkriptionsrichtlinien" type="LONGVARCHAR"/>
        <column name="encoding_comment" description="Kommentar Encoding" type="LONGVARCHAR"/>
        <column name="firstedition_comment" description="Kommentar Encoding" type="LONGVARCHAR"/>
        
        <column name="doi" type="LONGVARCHAR"/>
        <column name="format" type="LONGVARCHAR"/>
        <column name="wwwready" type="INTEGER"/>
        
        <column name="last_changed_by_user_id" type="INTEGER"/>
        
        <column name="tree_id" description="Publikationen können vertikal organisiert werden (Teil/Ganzes). Die id dient zur Unterscheidung der einzelnen Bäume." type="INTEGER"/>
        
        <!--Workflow-Aspekte -->        
        <!--<column name="status_id" type="INTEGER" required="true"/>-->

        <behavior name="nested_set">
            <parameter name="use_scope" value="true" />
            <parameter name="scope_column" value="tree_id" />
        </behavior>
            
        <behavior name="table_row_view">
            <!--<parameter name="Datenbank ID" value="id"/>-->
            <parameter name="Titel" value="accessor:getTitleString"/>
            <parameter name="erster Autor" value="accessor:getFirstAuthorName"/>
            <!--<parameter name="entstanden" value="accessor:getDatespecificationRelatedByCreationdateId"/>-->
            <parameter name="veröffentlicht" value="accessor:getDatespecificationRelatedByPublicationdateId"/>
            <parameter name="Verlag" value="accessor:getPublishingCompany"/>
            <parameter name="Ort" value="accessor:getPlace"/>
            <!--<parameter name="embedcolumnsstatus" value="status"/>-->
            <parameter name="Typ" value="type"/>
            <parameter name="query" value="\DTA\MetadataBundle\Model\Data\PublicationQuery::create()
                    ->leftJoinWith('Title')
                    ->leftJoinWith('Title.Titlefragment')
                    ->leftJoinWith('DatespecificationRelatedByPublicationdateId')
                    ->leftJoinWith('PersonPublication')
                    ->leftJoinWith('PersonPublication.Person')
                    ->leftJoinWith('Person.Personalname')
                    ->leftJoinWith('Personalname.Namefragment')
                    ->leftJoinWith('Volume')
                    ->orderBy('Titlefragment.type', 'asc')
                    ->orderBy('Titlefragment.Name', 'asc')
                    ->orderBy('Title.Id', 'asc')
                    ->orderBy('Volume.VolumeNumeric', 'asc');" />
        </behavior>
        
        <behavior name="reconstructed_flaggable">
            <parameter name="column" value="publishingcompany_id"/>
        </behavior>
        
        
        <foreign-key foreignTable="title"> <reference local="title_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="source"> <reference local="source_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="publishingcompany"> <reference local="publishingcompany_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="place"> <reference local="place_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="datespecification"> <reference local="publicationdate_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="datespecification"> <reference local="creationdate_id" foreign="id"/> </foreign-key>
        <foreign-key foreignTable="dta_user" phpName="LastChangedByUser" refPhpName="LastChangedPublication"> <reference local="last_changed_by_user_id" foreign="id"/> </foreign-key>
        
        <index><index-column name="tree_id"/></index>
        <index><index-column name="type"/></index>
        
    </table>

    <!-- Publication types. -->

    <!--MULTI-VOLUME               
        Mehrbändiges Werk.
        Zur Abbildung der Publikationstypen MM und MMS.
    -->
    <table name="multi_volume">
        <column name="id" type="INTEGER" primaryKey="true" required="true"/>
        
        <column name="volumes_total" description="Anzahl Bände (gesamt)" type="INTEGER"/>
        
        <behavior name="table_row_view"> <parameter name="embedcolumnspublication" value="publication"/> </behavior>
        
        <foreign-key foreignTable="publication"> <reference local="id" foreign="id"/> </foreign-key>
    </table> 
    
    <!--VOLUME               
        Buch, das zu einem mehrbändigen Werk gehört. 
        Zur Abbildung der Publikationstypen MM und MMS.
    -->
    <table name="volume">
        <column name="id" type="INTEGER" primaryKey="true" required="true"/>
        
        <column name="volume_description" description="Bezeichnung des Bandes (alphanumerisch)" type="LONGVARCHAR"/>
        <column name="volume_numeric" description="Bezeichnung des Bandes (numerisch)" type="INTEGER"/>
        
        <behavior name="table_row_view"> <parameter name="embedcolumnspublication" value="publication"/> </behavior>
        
        <foreign-key foreignTable="publication"> <reference local="id" foreign="id"/> </foreign-key>
    </table>   
    
    <!--CHAPTER
        Kapitel eines Buches.
        Zur Abbildung des Publikationstyps DS.
    -->
    <table name="chapter">
        <column name="id" type="INTEGER" primaryKey="true" required="true"/>
        
        <column name="pages" description="Seitenangabe" type="LONGVARCHAR"/>
        
        <!--<behavior name="table_row_view"> <parameter name="embedcolumnspublication" value="publication"/> </behavior>-->
        
        <foreign-key foreignTable="publication"> <reference local="id" foreign="id"/> </foreign-key>
    </table> 
    
    <!--ARTICLE
        Artikel in einer Zeitschrift.
        Zur Abbildung des Publikationstyps JA.
    -->
    <table name="article">
        <column name="id" type="INTEGER" primaryKey="true" required="true"/>
        
        <column name="pages" description="Seitenangabe" type="LONGVARCHAR"/>
        
        <!--<behavior name="table_row_view"> <parameter name="embedcolumnspublication" value="publication"/> </behavior>-->
        
        <foreign-key foreignTable="publication"> <reference local="id" foreign="id"/> </foreign-key>
    </table> 
    
     <!--SERIES
        Publikationsreihe. 
        Zur Abbildung des Publikationskomponente S.
    -->
    <table name="series">
        <column name="id" type="INTEGER" primaryKey="true" required="true"/>
        
        <behavior name="table_row_view"> <parameter name="embedcolumnspublication" value="publication"/> </behavior>
        
        <foreign-key foreignTable="publication"> <reference local="id" foreign="id"/> </foreign-key>
    </table> 
    
    <!-- Other entities that can be considered historical facts. -->
    <!-- ______________________________________________________  -->

    <table name="publishingcompany">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        <column name="gnd" type="VARCHAR" size="255"/> 
        
        <behavior name="table_row_view">
            <parameter name="Name" value="name"/>
            <parameter name="GND" value="gnd"/> 
            <parameter name="query" value="\DTA\MetadataBundle\Model\Data\PublishingcompanyQuery::create()
                    ->orderBy('Name', 'asc');" />
        </behavior>
        
        <unique> <unique-column name="gnd"/> </unique>
        <validator column="gnd"> <rule name="unique" message="GND ist schon vergeben!"/> </validator>
    </table>

    <table name="place">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        <column name="gnd" type="VARCHAR" size="255"/> 
        <unique> <unique-column name="gnd"/> </unique>
        <validator column="gnd"> <rule name="unique" message="GND ist schon vergeben!"/> </validator>
    </table>

    <table name="datespecification">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="year" type="INTEGER" primaryString="true"/>
        <column name="comments" type="LONGVARCHAR"/>
        
        <behavior name="reconstructed_flaggable">
            <parameter name="column" value="year"/>
        </behavior>
    </table>
    
    <!-- Personenname, besteht aus mehreren Namensfragmenten (nameFragment). -->
    <table name="personalname">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="person_id" type="INTEGER" required="true"/>
        <behavior name="sortable">
            <parameter name="scope_column" value="id"/>
        </behavior>
        <behavior name="table_row_view">
            <parameter name="name" value="accessor:__toString"/>
            <parameter name="zugeordnet (personen-id)" value="person_id"/>
            <parameter name="reihenfolge" value="accessor:getSortableRank"/>
        </behavior>
        <foreign-key foreignTable="person" onDelete="cascade"> <reference local="person_id" foreign="id"/> </foreign-key>
    </table>
    
    <!-- Namensfragmente sind Bestandteile eines Namens, z.B. Vor- oder Nachname. -->
    <table name="namefragment">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="personalname_id" type="INTEGER" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        
        <column name="type" description="Bedeutung des Fragments. Zum Beispiel Vorname, Nachname, Peerage (Adelstitel), Spelling (alternative schreibweise) etc." 
                type="ENUM" valueSet="FIRST_NAME,LAST_NAME,PEERAGE,GENERATION,PSEUDONYM,SPELLING" />
        <foreign-key foreignTable="personalname" onDelete="cascade"> <reference local="personalname_id" foreign="id"/> </foreign-key>
        
        
        <behavior name="sortable">
            <parameter name="use_scope" value="true"/>
            <parameter name="scope_column" value="personalname_id"/>
        </behavior>
        <behavior name="table_row_view">
            <parameter name="bestandteil" value="name"/>
        </behavior>
    </table>
    
    <table name="title">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <behavior name="table_row_view">
            <!--<parameter name="id" value="id"/>-->
            <parameter name="titel" value="accessor:__toString"/>
        </behavior>
    </table>
    
    <table name="titlefragment">
        
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        <column name="title_id" type="INTEGER" required="true"/>
        
        <column name="type" description="Bedeutung des Fragments. Zum Beispiel Haupttitel, Untertitel, etc." 
                type="ENUM" valueSet="MAIN_TITLE,SUBTITLE,SHORT_TITLE" />
        
        <foreign-key foreignTable="title" onDelete="cascade"> <reference local="title_id" foreign="id"/> </foreign-key>
        
        <behavior name="sortable">
            <parameter name="use_scope" value="true"/>
            <parameter name="scope_column" value="title_id"/>
        </behavior>
        <behavior name="reconstructed_flaggable">
            <parameter name="column" value="name"/>
        </behavior>
        
    </table>
    
    <table name="person">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <!--255 is the maximum length for a limit of 1000 bytes. required to allow unique indexing-->
        <column name="gnd" type="VARCHAR" size="255"/> 
        <!--The name is added in the personalName table because it's a one-to-many relationship.-->
        
        <behavior name="table_row_view">
            <parameter name="erster name@representative" value="personalname"/>
            <!--<parameter name="namen gesamt@count" value="personalname"/>-->
            <parameter name="gnd" value="gnd"/>
            <parameter name="query" 
                       value="DTA\MetadataBundle\Model\Data\PersonQuery::create()
                            ->joinWith('Personalname')
                            ->joinWith('Personalname.Namefragment')
                            ->orderBy('Namefragment.type',\Criteria::DESC)
                            ->orderBy('Namefragment.name');"/>
        </behavior>
        
        <unique> <unique-column name="gnd"/> </unique>
    </table>
    
    <table name="font">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        <behavior name="table_row_view">
            <parameter name="Name" value="name"/>
        </behavior>
    </table>
    
    <table name="language">
        <column name="id" type="INTEGER" primaryKey="true" autoIncrement="true" required="true"/>
        <column name="name" type="LONGVARCHAR" required="true" primaryString="true"/>
        <behavior name="table_row_view">
            <parameter name="Name" value="name"/>
        </behavior>
    </table>
    
</database>
