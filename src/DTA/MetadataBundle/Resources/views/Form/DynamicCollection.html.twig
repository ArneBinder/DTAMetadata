{# This defines how to render the additional form type widgets, like the
    dynamic collection and the select boxes with an additional add button.
    Its structure is derived from the collection form type, basically
    adding indicator classes to it to trigger javascript gui generation.

    The basics were taken from form_div_layout.hmtl.twig as provided by the symfony vendor files.

    the convention for naming blocks is
        <name> = result of form type's getName() function
        <name>_widget: the generated HTML
        <name>_row: the div containing the label, widget and errors
        <name>_label, <name>_errors: the generated error display html (usually invisible)

 #}

{# TODO: having removed all spaceless blocks (form_div_layout), the source output is rather convoluted. #}

{% extends 'form_div_layout.html.twig' %}

{#  -----------------------------------------------------------------------------
    dynamic collection widget
    ----------------------------------------------------------------------------- #}

{# By default, don't add an extra column for the label of the dynamic collection #}
{% block dynamicCollection_row %}
    {{ form_row(form, {'inlineLabel':inlineLabel, 'hideLabel':true }) }}
{% endblock %}

{% block dynamicCollection_widget %}

    {% if prototype is defined %}
        {# Add prototype for dynamically adding forms with JS #}
        {% set attr = attr|merge({'data-prototype': form_row(prototype) }) %}
    {% endif %}

    <div class='dynamic-collection {{ listAdditionalCssClasses }} accordion-group accordion-caret panel-group' {{ block('widget_container_attributes') }} >
        {% if form.parent is empty %}
            {{ form_errors(form) }}
        {% endif %}

    {#        Render the elements of the collection         #}
        {% for child in form %}
        <div class="panel panel-default">{{ form_row(child, {'parent_id':id, 'collapsed':true}) }}</div>
        {% endfor %}

        {{ form_rest(form) }}
    </div>
        {#onclick="function(){console.log('success')}"#}

        <a href="#" class="dynamic-collection add-entity">
            <i class='icon-plus'></i>{{ form.vars.modelClass|trans }} hinzuf√ºgen
        </a>

    {# For the javascript to have access to the translated modelClass name.
       The up and down dynamic controls need this to be more expressive.   #}
        <input type="hidden" name="translatedModelClassName" value="{{ form.vars.modelClass|trans }}"/>
        <input type="hidden" name="modelClassName" value="{{ form.vars.modelClass }}"/>

{% endblock %}