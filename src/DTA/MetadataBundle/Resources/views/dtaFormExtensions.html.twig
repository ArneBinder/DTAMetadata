{# This defines how to render the sortable collection form type widget.
    Its structure is derived from the collection form type, basically
    removing the labels and adding indicator classes to it to trigger javascript gui generation.

    The basics were taken from form_div_layout.hmtl.twig as provided by the symfony vendor files.
 #}

{# 
    The extended select box with an option to add a new database entity 
#}

{% block selectOrAdd_widget %}
{# dump(form) #}
{{form_widget(form)}} 
<button class="btn" type="button" style="position: relative; top: -6px; margin-left: 10px;">{{form.vars.label}} neu erstellen...</button>
<a href="{{ path('genericNew', {'className' : form.vars.modelClass, 'domainKey': domainKey|default("ajax")}) }}">{{form.vars.modelClass}}</a>
{#{dump(form.vars)}#}
{% endblock selectOrAdd_widget %}

{# 
    Input controls for all entities with multiple parts, with an order and a type (titles, names)
#}

{% block sortableCollection_widget %}
{% spaceless %}
    {% if prototype is defined %}
        {# Add prototype for dynamically adding forms with JS #}
        {% set attr = attr|merge({'data-prototype': form_row(prototype) }) %}
        {# Set marker classes for the JS (collectionControl.js) to add the corresponding buttons #}
        {% set attr = attr|merge({'class': "collection-editor collection-sortable" }) %}
    {% endif %}
    <ol {{ block('widget_container_attributes') }}>
        {% if form.parent is empty %}
            {{ form_errors(form) }}
        {% endif %}
        {{ block('sortableCollection_rows') }}
        {{ form_rest(form) }}
    </ol>
{% endspaceless %}
{% endblock %}

{% block sortableCollection_rows %}
{% spaceless %}
    {% for child in form %}
    <li>
        {{ form_errors(child) }}
        {{ form_widget(child) }}
        {# omit the default label (just a zero-based index) #}
        {#{ form_rest(child) }#}
    </li>
    {% endfor %}
{% endspaceless %}
{% endblock sortableCollection_rows %}

{% block titleFragment_widget %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}>
       {% if form.parent is empty %}
           {{ form_errors(form) }}
       {% endif %}
       {{ block('form_rows') }}
       {{ form_rest(form) }}
   </div>
{% endspaceless %}
{% endblock titleFragment_widget %}


