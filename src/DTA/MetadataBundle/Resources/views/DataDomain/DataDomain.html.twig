{% extends 'DTAMetadataBundle::base.html.twig' %}

{# Data Domain Base Template 
    Fills the domain menu template slot with the special option structure 
    for the data domain (view and search, create options for each model class).
    The other data domain templates extend this one (this saves includes for the domain menu all the time).
#}

{% block title %}Daten{% endblock %}

{% block currentDomainMenu %}
                      
    {% for item in domainMenu %}
    {% if item.children is defined %}
        <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown"> 
                {{ item.caption }} 
                <b class="caret"></b> 
            </a>
            <ul class="dropdown-menu">
            {% for child in item.children%}
            
            {# If the menu element is a model class, add view and create options #}
            {% if child.modelClass is defined %}
                <li class="dropdown-submenu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"> 
                    {{ child.caption }} 
                </a>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="{{ path('genericView', {'className':child.modelClass}) }}"> 
                                <i class="icon-list"></i> Anzeigen und suchen
                            </a>
                        </li>
                        {# Using the domainKey to dynamically generate the path also works:
                            path(domainKey~'NewRecord', {'className':child.modelClass})
                         #}
                        <li>
                            <a href="{{ path('DataDomainNewRecord', {'className':child.modelClass}) }}"> {#, 'recordId':0, 'domainKey': domainKey#}
                                <i class="icon-plus"></i> Neu anlegen
                            </a>
                        </li>
                    </ul>
                </li>
            {% else %}
                <li><a href="{{ path(child.path) }}">{{ child.caption }}</a></li>
            {% endif %}
            {% endfor %}
            </ul>
        </li>
    {% else %} {# item has no children #}
        {# If the menu element is a model class, add view and create options #}
        {% if item.modelClass is defined %}
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"> 
                    {{ item.caption }} 
                    <b class="caret"></b> 
                </a>
                <ul class="dropdown-menu">
                    <li>
                        <a href="{{ path('genericView', {'className':item.modelClass}) }}"> 
                            <i class="icon-list"></i> Anzeigen und suchen
                        </a>
                    </li>
                    <li>
                        <a href="{{ path('DataDomainNewRecord', {'className':item.modelClass}) }}"> {#, 'recordId':0, 'domainKey': domainKey#}
                            <i class="icon-plus"></i> Neu anlegen
                        </a>
                    </li>
                 </ul>
            </li>
        {# The menu element is a simple link #}
        {% else %}
            <li><a href="{{ path(item.path) }}">{{ item.caption }}</a></li>
        {% endif %}
    {% endif %}
    {% endfor %}

{% endblock %}